--- decompiled/TerrariaClientWindows/Terraria/GameContent/Drawing/ParticleOrchestrator.cs
+++ decompiled/TerrariaClientMac/Terraria/GameContent/Drawing/ParticleOrchestrator.cs
@@ -204,7 +_,7 @@
 			int num2 = Main.rand.Next(20, 40);
 			prettySparkleParticle.ColorTint = Main.hslToRgb(Main.rand.NextFloat(), 1f, 0.5f, 0);
 			prettySparkleParticle.LocalPosition = Main.rand.NextVector2FromRectangle(rect);
-			prettySparkleParticle.Rotation = (float)Math.PI / 2f;
+			prettySparkleParticle.Rotation = MathF.PI / 2f;
 			prettySparkleParticle.Scale = new Vector2(1f + Main.rand.NextFloat() * 2f, 0.7f + Main.rand.NextFloat() * 0.7f);
 			prettySparkleParticle.Velocity = new Vector2(0f, -1f);
 			prettySparkleParticle.FadeInNormalizedTime = 5E-06f;
@@ -219,7 +_,7 @@
 			PrettySparkleParticle prettySparkleParticle2 = _poolPrettySparkle.RequestParticle();
 			prettySparkleParticle2.ColorTint = new Color(255, 255, 255, 0);
 			prettySparkleParticle2.LocalPosition = Main.rand.NextVector2FromRectangle(rect);
-			prettySparkleParticle2.Rotation = (float)Math.PI / 2f;
+			prettySparkleParticle2.Rotation = MathF.PI / 2f;
 			prettySparkleParticle2.Scale = prettySparkleParticle.Scale * 0.5f;
 			prettySparkleParticle2.Velocity = new Vector2(0f, -1f);
 			prettySparkleParticle2.FadeInNormalizedTime = 5E-06f;
@@ -242,7 +_,7 @@
 			int num2 = Main.rand.Next(20, 40);
 			prettySparkleParticle.ColorTint = Main.hslToRgb(Main.rand.NextFloat(), 1f, 0.5f, 0);
 			prettySparkleParticle.LocalPosition = Main.rand.NextVector2FromRectangle(rectangle);
-			prettySparkleParticle.Rotation = (float)Math.PI / 2f;
+			prettySparkleParticle.Rotation = MathF.PI / 2f;
 			prettySparkleParticle.Scale = new Vector2(1f + Main.rand.NextFloat() * 2f, 0.7f + Main.rand.NextFloat() * 0.7f);
 			prettySparkleParticle.Velocity = new Vector2(0f, -1f);
 			prettySparkleParticle.FadeInNormalizedTime = 5E-06f;
@@ -257,7 +_,7 @@
 			PrettySparkleParticle prettySparkleParticle2 = _poolPrettySparkle.RequestParticle();
 			prettySparkleParticle2.ColorTint = new Color(255, 255, 255, 0);
 			prettySparkleParticle2.LocalPosition = Main.rand.NextVector2FromRectangle(rectangle);
-			prettySparkleParticle2.Rotation = (float)Math.PI / 2f;
+			prettySparkleParticle2.Rotation = MathF.PI / 2f;
 			prettySparkleParticle2.Scale = prettySparkleParticle.Scale * 0.5f;
 			prettySparkleParticle2.Velocity = new Vector2(0f, -1f);
 			prettySparkleParticle2.FadeInNormalizedTime = 5E-06f;
@@ -334,7 +_,7 @@
 		fadingParticle.ColorTint.A = 30;
 		fadingParticle.FadeInNormalizedTime = 0.5f;
 		fadingParticle.FadeOutNormalizedTime = 0.5f;
-		fadingParticle.Rotation = Main.rand.NextFloat() * ((float)Math.PI * 2f);
+		fadingParticle.Rotation = Main.rand.NextFloat() * (MathF.PI * 2f);
 		fadingParticle.Scale = Vector2.One * (0.5f + 0.5f * Main.rand.NextFloat());
 		Main.ParticleSystem_World_OverPlayers.Add(fadingParticle);
 	}
@@ -351,14 +_,14 @@
 			}
 			for (int i = 0; i < 40; i++) {
 				Dust dust = Dust.NewDustPerfect(Main.rand.NextVector2FromRectangle(hitbox), 16, null, 120, default(Color), Main.rand.NextFloat() * 0.8f + 0.8f);
-				dust.velocity = new Vector2(0f, (float)(-hitbox.Height) * Main.rand.NextFloat() * 0.04f).RotatedBy(Main.rand.NextFloatDirection() * ((float)Math.PI * 2f) * 0.1f);
+				dust.velocity = new Vector2(0f, (float)(-hitbox.Height) * Main.rand.NextFloat() * 0.04f).RotatedBy(Main.rand.NextFloatDirection() * (MathF.PI * 2f) * 0.1f);
 				dust.velocity += player.velocity * 2f * Main.rand.NextFloat();
 				dust.noGravity = true;
 				dust.noLight = (dust.noLightEmittence = true);
 			}
 			for (int j = 0; j < 5; j++) {
 				Dust dust2 = Dust.NewDustPerfect(Main.rand.NextVector2FromRectangle(hitbox), 43, null, 254, Main.hslToRgb(Main.rand.NextFloat(), 0.3f, 0.8f), Main.rand.NextFloat() * 0.8f + 0.8f);
-				dust2.velocity = new Vector2(0f, (float)(-hitbox.Height) * Main.rand.NextFloat() * 0.04f).RotatedBy(Main.rand.NextFloatDirection() * ((float)Math.PI * 2f) * 0.1f);
+				dust2.velocity = new Vector2(0f, (float)(-hitbox.Height) * Main.rand.NextFloat() * 0.04f).RotatedBy(Main.rand.NextFloatDirection() * (MathF.PI * 2f) * 0.1f);
 				dust2.velocity += player.velocity * 2f * Main.rand.NextFloat();
 				dust2.noGravity = true;
 				dust2.noLight = (dust2.noLightEmittence = true);
@@ -420,7 +_,7 @@
 	{
 		float num = 20f;
 		for (int i = 0; i < 2; i++) {
-			float num2 = (float)Math.PI * 2f * Main.rand.NextFloatDirection() * 0.05f;
+			float num2 = MathF.PI * 2f * Main.rand.NextFloatDirection() * 0.05f;
 			Color color = Main.hslToRgb(Main.rand.NextFloat(), 1f, 0.5f);
 			color.A /= 2;
 			Color value = color;
@@ -428,7 +_,7 @@
 			value = Color.Lerp(value, Color.White, 0.5f);
 			for (float num3 = 0f; num3 < 4f; num3 += 1f) {
 				PrettySparkleParticle prettySparkleParticle = _poolPrettySparkle.RequestParticle();
-				Vector2 vector = ((float)Math.PI / 2f * num3 + num2).ToRotationVector2() * 4f;
+				Vector2 vector = (MathF.PI / 2f * num3 + num2).ToRotationVector2() * 4f;
 				prettySparkleParticle.ColorTint = color;
 				prettySparkleParticle.LocalPosition = settings.PositionInWorld;
 				prettySparkleParticle.Rotation = vector.ToRotation();
@@ -450,7 +_,7 @@
 			}
 			for (float num4 = 0f; num4 < 4f; num4 += 1f) {
 				PrettySparkleParticle prettySparkleParticle2 = _poolPrettySparkle.RequestParticle();
-				Vector2 vector2 = ((float)Math.PI / 2f * num4 + num2).ToRotationVector2() * 4f;
+				Vector2 vector2 = (MathF.PI / 2f * num4 + num2).ToRotationVector2() * 4f;
 				prettySparkleParticle2.ColorTint = value;
 				prettySparkleParticle2.LocalPosition = settings.PositionInWorld;
 				prettySparkleParticle2.Rotation = vector2.ToRotation();
@@ -470,12 +_,12 @@
 				Main.ParticleSystem_World_OverPlayers.Add(prettySparkleParticle2);
 				if (i == 0) {
 					for (int j = 0; j < 1; j++) {
-						Dust dust = Dust.NewDustPerfect(settings.PositionInWorld, 306, vector2.RotatedBy(Main.rand.NextFloatDirection() * ((float)Math.PI * 2f) * 0.025f) * Main.rand.NextFloat());
+						Dust dust = Dust.NewDustPerfect(settings.PositionInWorld, 306, vector2.RotatedBy(Main.rand.NextFloatDirection() * (MathF.PI * 2f) * 0.025f) * Main.rand.NextFloat());
 						dust.noGravity = true;
 						dust.scale = 1.4f;
 						dust.fadeIn = 1.2f;
 						dust.color = color;
-						Dust dust2 = Dust.NewDustPerfect(settings.PositionInWorld, 306, -vector2.RotatedBy(Main.rand.NextFloatDirection() * ((float)Math.PI * 2f) * 0.025f) * Main.rand.NextFloat());
+						Dust dust2 = Dust.NewDustPerfect(settings.PositionInWorld, 306, -vector2.RotatedBy(Main.rand.NextFloatDirection() * (MathF.PI * 2f) * 0.025f) * Main.rand.NextFloat());
 						dust2.noGravity = true;
 						dust2.scale = 1.4f;
 						dust2.fadeIn = 1.2f;
@@ -509,18 +_,18 @@
 		for (int i = 0; i < 13; i++) {
 			Gore gore = Gore.NewGoreDirect(positionInWorld + new Vector2(-20f, -20f) + Main.rand.NextVector2Circular(20f, 20f), Vector2.Zero, Main.rand.Next(61, 64), 1f + Main.rand.NextFloat() * 0.3f);
 			gore.alpha = 100;
-			gore.velocity = ((float)Math.PI * 2f * (float)Main.rand.Next()).ToRotationVector2() * Main.rand.NextFloat() + settings.MovementVector * 0.5f;
+			gore.velocity = (MathF.PI * 2f * (float)Main.rand.Next()).ToRotationVector2() * Main.rand.NextFloat() + settings.MovementVector * 0.5f;
 		}
 	}
 
 	private static void Spawn_TerraBlade(ParticleOrchestraSettings settings)
 	{
 		float num = 30f;
-		float num2 = settings.MovementVector.ToRotation() + (float)Math.PI / 2f;
+		float num2 = settings.MovementVector.ToRotation() + MathF.PI / 2f;
 		float x = 3f;
 		for (float num3 = 0f; num3 < 4f; num3 += 1f) {
 			PrettySparkleParticle prettySparkleParticle = _poolPrettySparkle.RequestParticle();
-			Vector2 vector = ((float)Math.PI / 2f * num3 + num2).ToRotationVector2() * 4f;
+			Vector2 vector = (MathF.PI / 2f * num3 + num2).ToRotationVector2() * 4f;
 			prettySparkleParticle.ColorTint = new Color(0.2f, 0.85f, 0.4f, 0.5f);
 			prettySparkleParticle.LocalPosition = settings.PositionInWorld;
 			prettySparkleParticle.Rotation = vector.ToRotation();
@@ -543,7 +_,7 @@
 		for (float num4 = -1f; num4 <= 1f; num4 += 2f) {
 			PrettySparkleParticle prettySparkleParticle2 = _poolPrettySparkle.RequestParticle();
 			_ = num2.ToRotationVector2() * 4f;
-			Vector2 vector2 = ((float)Math.PI / 2f * num4 + num2).ToRotationVector2() * 2f;
+			Vector2 vector2 = (MathF.PI / 2f * num4 + num2).ToRotationVector2() * 2f;
 			prettySparkleParticle2.ColorTint = new Color(0.4f, 1f, 0.4f, 0.5f);
 			prettySparkleParticle2.LocalPosition = settings.PositionInWorld;
 			prettySparkleParticle2.Rotation = vector2.ToRotation();
@@ -561,7 +_,7 @@
 		}
 		for (float num5 = 0f; num5 < 4f; num5 += 1f) {
 			PrettySparkleParticle prettySparkleParticle3 = _poolPrettySparkle.RequestParticle();
-			Vector2 vector3 = ((float)Math.PI / 2f * num5 + num2).ToRotationVector2() * 4f;
+			Vector2 vector3 = (MathF.PI / 2f * num5 + num2).ToRotationVector2() * 4f;
 			prettySparkleParticle3.ColorTint = new Color(0.2f, 1f, 0.2f, 1f);
 			prettySparkleParticle3.LocalPosition = settings.PositionInWorld;
 			prettySparkleParticle3.Rotation = vector3.ToRotation();
@@ -580,10 +_,10 @@
 			}
 			Main.ParticleSystem_World_OverPlayers.Add(prettySparkleParticle3);
 			for (int i = 0; i < 1; i++) {
-				Dust dust = Dust.NewDustPerfect(settings.PositionInWorld, 107, vector3.RotatedBy(Main.rand.NextFloatDirection() * ((float)Math.PI * 2f) * 0.025f) * Main.rand.NextFloat());
+				Dust dust = Dust.NewDustPerfect(settings.PositionInWorld, 107, vector3.RotatedBy(Main.rand.NextFloatDirection() * (MathF.PI * 2f) * 0.025f) * Main.rand.NextFloat());
 				dust.noGravity = true;
 				dust.scale = 0.8f;
-				Dust dust2 = Dust.NewDustPerfect(settings.PositionInWorld, 107, -vector3.RotatedBy(Main.rand.NextFloatDirection() * ((float)Math.PI * 2f) * 0.025f) * Main.rand.NextFloat());
+				Dust dust2 = Dust.NewDustPerfect(settings.PositionInWorld, 107, -vector3.RotatedBy(Main.rand.NextFloatDirection() * (MathF.PI * 2f) * 0.025f) * Main.rand.NextFloat());
 				dust2.noGravity = true;
 				dust2.scale = 1.4f;
 			}
@@ -596,7 +_,7 @@
 		float num2 = 0f;
 		for (float num3 = 0f; num3 < 4f; num3 += 1f) {
 			PrettySparkleParticle prettySparkleParticle = _poolPrettySparkle.RequestParticle();
-			Vector2 vector = ((float)Math.PI / 2f * num3 + num2).ToRotationVector2() * 4f;
+			Vector2 vector = (MathF.PI / 2f * num3 + num2).ToRotationVector2() * 4f;
 			prettySparkleParticle.ColorTint = new Color(0.9f, 0.85f, 0.4f, 0.5f);
 			prettySparkleParticle.LocalPosition = settings.PositionInWorld;
 			prettySparkleParticle.Rotation = vector.ToRotation();
@@ -618,7 +_,7 @@
 		}
 		for (float num4 = 0f; num4 < 4f; num4 += 1f) {
 			PrettySparkleParticle prettySparkleParticle2 = _poolPrettySparkle.RequestParticle();
-			Vector2 vector2 = ((float)Math.PI / 2f * num4 + num2).ToRotationVector2() * 4f;
+			Vector2 vector2 = (MathF.PI / 2f * num4 + num2).ToRotationVector2() * 4f;
 			prettySparkleParticle2.ColorTint = new Color(1f, 1f, 0.2f, 1f);
 			prettySparkleParticle2.LocalPosition = settings.PositionInWorld;
 			prettySparkleParticle2.Rotation = vector2.ToRotation();
@@ -637,10 +_,10 @@
 			}
 			Main.ParticleSystem_World_OverPlayers.Add(prettySparkleParticle2);
 			for (int i = 0; i < 1; i++) {
-				Dust dust = Dust.NewDustPerfect(settings.PositionInWorld, 169, vector2.RotatedBy(Main.rand.NextFloatDirection() * ((float)Math.PI * 2f) * 0.025f) * Main.rand.NextFloat());
+				Dust dust = Dust.NewDustPerfect(settings.PositionInWorld, 169, vector2.RotatedBy(Main.rand.NextFloatDirection() * (MathF.PI * 2f) * 0.025f) * Main.rand.NextFloat());
 				dust.noGravity = true;
 				dust.scale = 1.4f;
-				Dust dust2 = Dust.NewDustPerfect(settings.PositionInWorld, 169, -vector2.RotatedBy(Main.rand.NextFloatDirection() * ((float)Math.PI * 2f) * 0.025f) * Main.rand.NextFloat());
+				Dust dust2 = Dust.NewDustPerfect(settings.PositionInWorld, 169, -vector2.RotatedBy(Main.rand.NextFloatDirection() * (MathF.PI * 2f) * 0.025f) * Main.rand.NextFloat());
 				dust2.noGravity = true;
 				dust2.scale = 1.4f;
 			}
@@ -672,10 +_,10 @@
 		float num4 = 2.5f;
 		Color lightColorTint = new Color(0.2f, 0.4f, 0.15f);
 		Vector2 positionInWorld = settings.PositionInWorld;
-		float num5 = (float)Math.PI / 20f;
+		float num5 = MathF.PI / 20f;
-		float num6 = (float)Math.PI / 15f;
+		float num6 = MathF.PI / 15f;
 		for (int i = 0; i < num; i++) {
-			Vector2 spinninpoint = movementVector + new Vector2(num3 + Main.rand.NextFloat() * 1f, 0f).RotatedBy((float)i / (float)num * ((float)Math.PI * 2f), Vector2.Zero);
+			Vector2 spinninpoint = movementVector + new Vector2(num3 + Main.rand.NextFloat() * 1f, 0f).RotatedBy((float)i / (float)num * (MathF.PI * 2f), Vector2.Zero);
 			spinninpoint = spinninpoint.RotatedByRandom(num5);
 			GasParticle gasParticle = _poolGas.RequestParticle();
 			gasParticle.AccelerationPerFrame = Vector2.Zero;
@@ -688,7 +_,7 @@
 			Main.ParticleSystem_World_BehindPlayers.Add(gasParticle);
 		}
 		for (int j = 0; j < num2; j++) {
-			Vector2 spinninpoint2 = new Vector2(num4 + Main.rand.NextFloat() * 1.45f, 0f).RotatedBy((float)j / (float)num2 * ((float)Math.PI * 2f), Vector2.Zero);
+			Vector2 spinninpoint2 = new Vector2(num4 + Main.rand.NextFloat() * 1.45f, 0f).RotatedBy((float)j / (float)num2 * (MathF.PI * 2f), Vector2.Zero);
 			spinninpoint2 = spinninpoint2.RotatedByRandom(num6);
 			if (j % 2 == 0) {
 				spinninpoint2 *= 0.5f;
@@ -708,10 +_,10 @@
 	private static void Spawn_TrueExcalibur(ParticleOrchestraSettings settings)
 	{
 		float num = 36f;
-		float num2 = (float)Math.PI / 4f;
+		float num2 = MathF.PI / 4f;
 		for (float num3 = 0f; num3 < 2f; num3 += 1f) {
 			PrettySparkleParticle prettySparkleParticle = _poolPrettySparkle.RequestParticle();
-			Vector2 v = ((float)Math.PI / 2f * num3 + num2).ToRotationVector2() * 4f;
+			Vector2 v = (MathF.PI / 2f * num3 + num2).ToRotationVector2() * 4f;
 			prettySparkleParticle.ColorTint = new Color(1f, 0f, 0.3f, 1f);
 			prettySparkleParticle.LocalPosition = settings.PositionInWorld;
 			prettySparkleParticle.Rotation = v.ToRotation();
@@ -728,7 +_,7 @@
 		}
 		for (float num4 = 0f; num4 < 2f; num4 += 1f) {
 			PrettySparkleParticle prettySparkleParticle2 = _poolPrettySparkle.RequestParticle();
-			Vector2 vector = ((float)Math.PI / 2f * num4 + num2).ToRotationVector2() * 4f;
+			Vector2 vector = (MathF.PI / 2f * num4 + num2).ToRotationVector2() * 4f;
 			prettySparkleParticle2.ColorTint = new Color(1f, 0.5f, 0.8f, 1f);
 			prettySparkleParticle2.LocalPosition = settings.PositionInWorld;
 			prettySparkleParticle2.Rotation = vector.ToRotation();
@@ -743,10 +_,10 @@
 			Main.ParticleSystem_World_OverPlayers.Add(prettySparkleParticle2);
 			for (int i = 0; i < 1; i++) {
 				if (Main.rand.Next(2) != 0) {
-					Dust dust = Dust.NewDustPerfect(settings.PositionInWorld, 242, vector.RotatedBy(Main.rand.NextFloatDirection() * ((float)Math.PI * 2f) * 0.025f) * Main.rand.NextFloat());
+					Dust dust = Dust.NewDustPerfect(settings.PositionInWorld, 242, vector.RotatedBy(Main.rand.NextFloatDirection() * (MathF.PI * 2f) * 0.025f) * Main.rand.NextFloat());
 					dust.noGravity = true;
 					dust.scale = 1.4f;
-					Dust dust2 = Dust.NewDustPerfect(settings.PositionInWorld, 242, -vector.RotatedBy(Main.rand.NextFloatDirection() * ((float)Math.PI * 2f) * 0.025f) * Main.rand.NextFloat());
+					Dust dust2 = Dust.NewDustPerfect(settings.PositionInWorld, 242, -vector.RotatedBy(Main.rand.NextFloatDirection() * (MathF.PI * 2f) * 0.025f) * Main.rand.NextFloat());
 					dust2.noGravity = true;
 					dust2.scale = 1.4f;
 				}
@@ -756,7 +_,7 @@
 		num2 = 0f;
 		for (float num5 = 0f; num5 < 4f; num5 += 1f) {
 			PrettySparkleParticle prettySparkleParticle3 = _poolPrettySparkle.RequestParticle();
-			Vector2 vector2 = ((float)Math.PI / 2f * num5 + num2).ToRotationVector2() * 4f;
+			Vector2 vector2 = (MathF.PI / 2f * num5 + num2).ToRotationVector2() * 4f;
 			prettySparkleParticle3.ColorTint = new Color(0.9f, 0.85f, 0.4f, 0.5f);
 			prettySparkleParticle3.LocalPosition = settings.PositionInWorld;
 			prettySparkleParticle3.Rotation = vector2.ToRotation();
@@ -778,7 +_,7 @@
 		}
 		for (float num6 = 0f; num6 < 4f; num6 += 1f) {
 			PrettySparkleParticle prettySparkleParticle4 = _poolPrettySparkle.RequestParticle();
-			Vector2 vector3 = ((float)Math.PI / 2f * num6 + num2).ToRotationVector2() * 4f;
+			Vector2 vector3 = (MathF.PI / 2f * num6 + num2).ToRotationVector2() * 4f;
 			prettySparkleParticle4.ColorTint = new Color(1f, 1f, 0.2f, 1f);
 			prettySparkleParticle4.LocalPosition = settings.PositionInWorld;
 			prettySparkleParticle4.Rotation = vector3.ToRotation();
@@ -798,10 +_,10 @@
 			Main.ParticleSystem_World_OverPlayers.Add(prettySparkleParticle4);
 			for (int j = 0; j < 1; j++) {
 				if (Main.rand.Next(2) != 0) {
-					Dust dust3 = Dust.NewDustPerfect(settings.PositionInWorld, 169, vector3.RotatedBy(Main.rand.NextFloatDirection() * ((float)Math.PI * 2f) * 0.025f) * Main.rand.NextFloat());
+					Dust dust3 = Dust.NewDustPerfect(settings.PositionInWorld, 169, vector3.RotatedBy(Main.rand.NextFloatDirection() * (MathF.PI * 2f) * 0.025f) * Main.rand.NextFloat());
 					dust3.noGravity = true;
 					dust3.scale = 1.4f;
-					Dust dust4 = Dust.NewDustPerfect(settings.PositionInWorld, 169, -vector3.RotatedBy(Main.rand.NextFloatDirection() * ((float)Math.PI * 2f) * 0.025f) * Main.rand.NextFloat());
+					Dust dust4 = Dust.NewDustPerfect(settings.PositionInWorld, 169, -vector3.RotatedBy(Main.rand.NextFloatDirection() * (MathF.PI * 2f) * 0.025f) * Main.rand.NextFloat());
 					dust4.noGravity = true;
 					dust4.scale = 1.4f;
 				}
@@ -812,14 +_,14 @@
 	private static void Spawn_AshTreeShake(ParticleOrchestraSettings settings)
 	{
 		float num = 10f + 20f * Main.rand.NextFloat();
-		float num2 = -(float)Math.PI / 4f;
+		float num2 = -MathF.PI / 4f;
 		float num3 = 0.2f + 0.4f * Main.rand.NextFloat();
 		Color colorTint = Main.hslToRgb(Main.rand.NextFloat() * 0.1f + 0.06f, 1f, 0.5f);
 		colorTint.A /= 2;
 		colorTint *= Main.rand.NextFloat() * 0.3f + 0.7f;
 		for (float num4 = 0f; num4 < 2f; num4 += 1f) {
 			PrettySparkleParticle prettySparkleParticle = _poolPrettySparkle.RequestParticle();
-			Vector2 vector = ((float)Math.PI / 4f + (float)Math.PI * num4 + num2).ToRotationVector2() * 4f;
+			Vector2 vector = (MathF.PI / 4f + MathF.PI * num4 + num2).ToRotationVector2() * 4f;
 			prettySparkleParticle.ColorTint = colorTint;
 			prettySparkleParticle.LocalPosition = settings.PositionInWorld;
 			prettySparkleParticle.Rotation = vector.ToRotation();
@@ -843,7 +_,7 @@
 		}
 		for (float num5 = 0f; num5 < 2f; num5 += 1f) {
 			PrettySparkleParticle prettySparkleParticle2 = _poolPrettySparkle.RequestParticle();
-			Vector2 vector2 = ((float)Math.PI / 4f + (float)Math.PI * num5 + num2).ToRotationVector2() * 4f;
+			Vector2 vector2 = (MathF.PI / 4f + MathF.PI * num5 + num2).ToRotationVector2() * 4f;
 			prettySparkleParticle2.ColorTint = new Color(1f, 0.4f, 0.2f, 1f);
 			prettySparkleParticle2.LocalPosition = settings.PositionInWorld;
 			prettySparkleParticle2.Rotation = vector2.ToRotation();
@@ -864,10 +_,10 @@
 			}
 			Main.ParticleSystem_World_OverPlayers.Add(prettySparkleParticle2);
 			for (int i = 0; i < 1; i++) {
-				Dust dust = Dust.NewDustPerfect(settings.PositionInWorld, 6, vector2.RotatedBy(Main.rand.NextFloatDirection() * ((float)Math.PI * 2f) * 0.025f) * Main.rand.NextFloat());
+				Dust dust = Dust.NewDustPerfect(settings.PositionInWorld, 6, vector2.RotatedBy(Main.rand.NextFloatDirection() * (MathF.PI * 2f) * 0.025f) * Main.rand.NextFloat());
 				dust.noGravity = true;
 				dust.scale = 1.4f;
-				Dust dust2 = Dust.NewDustPerfect(settings.PositionInWorld, 6, -vector2.RotatedBy(Main.rand.NextFloatDirection() * ((float)Math.PI * 2f) * 0.025f) * Main.rand.NextFloat());
+				Dust dust2 = Dust.NewDustPerfect(settings.PositionInWorld, 6, -vector2.RotatedBy(Main.rand.NextFloatDirection() * (MathF.PI * 2f) * 0.025f) * Main.rand.NextFloat());
 				dust2.noGravity = true;
 				dust2.scale = 1.4f;
 			}
@@ -877,11 +_,11 @@
 	private static void Spawn_LeafCrystalPassive(ParticleOrchestraSettings settings)
 	{
 		float num = 90f;
-		float num2 = (float)Math.PI * 2f * Main.rand.NextFloat();
+		float num2 = MathF.PI * 2f * Main.rand.NextFloat();
 		float num3 = 3f;
 		for (float num4 = 0f; num4 < num3; num4 += 1f) {
 			PrettySparkleParticle prettySparkleParticle = _poolPrettySparkle.RequestParticle();
-			Vector2 v = ((float)Math.PI * 2f / num3 * num4 + num2).ToRotationVector2() * 4f;
+			Vector2 v = (MathF.PI * 2f / num3 * num4 + num2).ToRotationVector2() * 4f;
 			prettySparkleParticle.ColorTint = new Color(0.3f, 0.6f, 0.3f, 0.5f);
 			prettySparkleParticle.LocalPosition = settings.PositionInWorld;
 			prettySparkleParticle.Rotation = v.ToRotation();
@@ -929,7 +_,7 @@
 		float num2 = 0f;
 		for (float num3 = 0f; num3 < 3f; num3 += 2f) {
 			PrettySparkleParticle prettySparkleParticle = _poolPrettySparkle.RequestParticle();
-			Vector2 vector = ((float)Math.PI / 4f + (float)Math.PI / 4f * num3 + num2).ToRotationVector2() * 4f;
+			Vector2 vector = (MathF.PI / 4f + MathF.PI / 4f * num3 + num2).ToRotationVector2() * 4f;
 			prettySparkleParticle.ColorTint = new Color(0.3f, 0.6f, 0.3f, 0.5f);
 			prettySparkleParticle.LocalPosition = settings.PositionInWorld;
 			prettySparkleParticle.Rotation = vector.ToRotation();
@@ -953,7 +_,7 @@
 		}
 		for (float num4 = 0f; num4 < 3f; num4 += 2f) {
 			PrettySparkleParticle prettySparkleParticle2 = _poolPrettySparkle.RequestParticle();
-			Vector2 vector2 = ((float)Math.PI / 4f + (float)Math.PI / 4f * num4 + num2).ToRotationVector2() * 4f;
+			Vector2 vector2 = (MathF.PI / 4f + MathF.PI / 4f * num4 + num2).ToRotationVector2() * 4f;
 			prettySparkleParticle2.ColorTint = new Color(0.6f, 1f, 0.2f, 1f);
 			prettySparkleParticle2.LocalPosition = settings.PositionInWorld;
 			prettySparkleParticle2.Rotation = vector2.ToRotation();
@@ -974,10 +_,10 @@
 			}
 			Main.ParticleSystem_World_OverPlayers.Add(prettySparkleParticle2);
 			for (int i = 0; i < 2; i++) {
-				Dust dust = Dust.NewDustPerfect(settings.PositionInWorld, 75, vector2.RotatedBy(Main.rand.NextFloatDirection() * ((float)Math.PI * 2f) * 0.025f) * Main.rand.NextFloat());
+				Dust dust = Dust.NewDustPerfect(settings.PositionInWorld, 75, vector2.RotatedBy(Main.rand.NextFloatDirection() * (MathF.PI * 2f) * 0.025f) * Main.rand.NextFloat());
 				dust.noGravity = true;
 				dust.scale = 1.4f;
-				Dust dust2 = Dust.NewDustPerfect(settings.PositionInWorld, 75, -vector2.RotatedBy(Main.rand.NextFloatDirection() * ((float)Math.PI * 2f) * 0.025f) * Main.rand.NextFloat());
+				Dust dust2 = Dust.NewDustPerfect(settings.PositionInWorld, 75, -vector2.RotatedBy(Main.rand.NextFloatDirection() * (MathF.PI * 2f) * 0.025f) * Main.rand.NextFloat());
 				dust2.noGravity = true;
 				dust2.scale = 1.4f;
 			}
@@ -990,7 +_,7 @@
 		float num2 = 0f;
 		for (float num3 = 0f; num3 < 3f; num3 += 1f) {
 			PrettySparkleParticle prettySparkleParticle = _poolPrettySparkle.RequestParticle();
-			Vector2 vector = ((float)Math.PI / 4f + (float)Math.PI / 4f * num3 + num2).ToRotationVector2() * 4f;
+			Vector2 vector = (MathF.PI / 4f + MathF.PI / 4f * num3 + num2).ToRotationVector2() * 4f;
 			prettySparkleParticle.ColorTint = new Color(0.25f, 0.1f, 0.5f, 0.5f);
 			prettySparkleParticle.LocalPosition = settings.PositionInWorld;
 			prettySparkleParticle.Rotation = vector.ToRotation();
@@ -1014,7 +_,7 @@
 		}
 		for (float num4 = 0f; num4 < 3f; num4 += 1f) {
 			PrettySparkleParticle prettySparkleParticle2 = _poolPrettySparkle.RequestParticle();
-			Vector2 vector2 = ((float)Math.PI / 4f + (float)Math.PI / 4f * num4 + num2).ToRotationVector2() * 4f;
+			Vector2 vector2 = (MathF.PI / 4f + MathF.PI / 4f * num4 + num2).ToRotationVector2() * 4f;
 			prettySparkleParticle2.ColorTint = new Color(0.5f, 0.25f, 1f, 1f);
 			prettySparkleParticle2.LocalPosition = settings.PositionInWorld;
 			prettySparkleParticle2.Rotation = vector2.ToRotation();
@@ -1039,11 +_,11 @@
 
 	private static void Spawn_SilverBulletSparkle(ParticleOrchestraSettings settings)
 	{
-		_ = Main.rand.NextFloat() * ((float)Math.PI * 2f);
+		_ = Main.rand.NextFloat() * (MathF.PI * 2f);
 		Vector2 movementVector = settings.MovementVector;
 		Vector2 vector = new Vector2(Main.rand.NextFloat() * 0.2f + 0.4f);
 		Main.rand.NextFloat();
-		float rotation = (float)Math.PI / 2f;
+		float rotation = MathF.PI / 2f;
 		Vector2 vector2 = Main.rand.NextVector2Circular(4f, 4f) * vector;
 		PrettySparkleParticle prettySparkleParticle = _poolPrettySparkle.RequestParticle();
 		prettySparkleParticle.AccelerationPerFrame = -movementVector * 1f / 30f;
@@ -1063,14 +_,14 @@
 
 	private static void Spawn_PaladinsHammer(ParticleOrchestraSettings settings)
 	{
-		float num = Main.rand.NextFloat() * ((float)Math.PI * 2f);
+		float num = Main.rand.NextFloat() * (MathF.PI * 2f);
 		float num2 = 1f;
 		for (float num3 = 0f; num3 < 1f; num3 += 1f / num2) {
 			float num4 = 0.6f + Main.rand.NextFloat() * 0.35f;
 			Vector2 vector = settings.MovementVector * num4;
 			Vector2 vector2 = new Vector2(Main.rand.NextFloat() * 0.4f + 0.2f);
-			float f = num + Main.rand.NextFloat() * ((float)Math.PI * 2f);
+			float f = num + Main.rand.NextFloat() * (MathF.PI * 2f);
-			float rotation = (float)Math.PI / 2f;
+			float rotation = MathF.PI / 2f;
 			_ = 0.1f * vector2;
 			Vector2 vector3 = Main.rand.NextVector2Circular(12f, 12f) * vector2;
 			PrettySparkleParticle prettySparkleParticle = _poolPrettySparkle.RequestParticle();
@@ -1115,13 +_,13 @@
 
 	private static void Spawn_PrincessWeapon(ParticleOrchestraSettings settings)
 	{
-		float num = Main.rand.NextFloat() * ((float)Math.PI * 2f);
+		float num = Main.rand.NextFloat() * (MathF.PI * 2f);
 		float num2 = 1f;
 		for (float num3 = 0f; num3 < 1f; num3 += 1f / num2) {
 			Vector2 vector = settings.MovementVector * (0.6f + Main.rand.NextFloat() * 0.35f);
 			Vector2 vector2 = new Vector2(Main.rand.NextFloat() * 0.4f + 0.2f);
-			float f = num + Main.rand.NextFloat() * ((float)Math.PI * 2f);
+			float f = num + Main.rand.NextFloat() * (MathF.PI * 2f);
-			float rotation = (float)Math.PI / 2f;
+			float rotation = MathF.PI / 2f;
 			Vector2 vector3 = 0.1f * vector2;
 			float num4 = 60f;
 			Vector2 vector4 = Main.rand.NextVector2Circular(8f, 8f) * vector2;
@@ -1167,13 +_,13 @@
 
 	private static void Spawn_StardustPunch(ParticleOrchestraSettings settings)
 	{
-		float num = Main.rand.NextFloat() * ((float)Math.PI * 2f);
+		float num = Main.rand.NextFloat() * (MathF.PI * 2f);
 		float num2 = 1f;
 		for (float num3 = 0f; num3 < 1f; num3 += 1f / num2) {
 			Vector2 vector = settings.MovementVector * (0.3f + Main.rand.NextFloat() * 0.35f);
 			Vector2 vector2 = new Vector2(Main.rand.NextFloat() * 0.4f + 0.4f);
-			float f = num + Main.rand.NextFloat() * ((float)Math.PI * 2f);
+			float f = num + Main.rand.NextFloat() * (MathF.PI * 2f);
-			float rotation = (float)Math.PI / 2f;
+			float rotation = MathF.PI / 2f;
 			Vector2 vector3 = 0.1f * vector2;
 			float num4 = 60f;
 			Vector2 vector4 = Main.rand.NextVector2Circular(8f, 8f) * vector2;
@@ -1214,14 +_,14 @@
 
 	private static void Spawn_RainbowRodHit(ParticleOrchestraSettings settings)
 	{
-		float num = Main.rand.NextFloat() * ((float)Math.PI * 2f);
+		float num = Main.rand.NextFloat() * (MathF.PI * 2f);
 		float num2 = 6f;
 		float num3 = Main.rand.NextFloat();
 		for (float num4 = 0f; num4 < 1f; num4 += 1f / num2) {
 			Vector2 vector = settings.MovementVector * Main.rand.NextFloatDirection() * 0.15f;
 			Vector2 vector2 = new Vector2(Main.rand.NextFloat() * 0.4f + 0.4f);
-			float f = num + Main.rand.NextFloat() * ((float)Math.PI * 2f);
+			float f = num + Main.rand.NextFloat() * (MathF.PI * 2f);
-			float rotation = (float)Math.PI / 2f;
+			float rotation = MathF.PI / 2f;
 			Vector2 vector3 = 1.5f * vector2;
 			float num5 = 60f;
 			Vector2 vector4 = Main.rand.NextVector2Circular(8f, 8f) * vector2;
@@ -1262,7 +_,7 @@
 
 	private static void Spawn_BlackLightningSmall(ParticleOrchestraSettings settings)
 	{
-		float num = Main.rand.NextFloat() * ((float)Math.PI * 2f);
+		float num = Main.rand.NextFloat() * (MathF.PI * 2f);
 		float num2 = Main.rand.Next(1, 3);
 		float num3 = 0.7f;
 		int num4 = 916;
@@ -1271,7 +_,7 @@
 		Color indigo = Color.Indigo;
 		indigo.A = 0;
 		for (float num5 = 0f; num5 < 1f; num5 += 1f / num2) {
-			float f = (float)Math.PI * 2f * num5 + num + Main.rand.NextFloatDirection() * 0.25f;
+			float f = MathF.PI * 2f * num5 + num + Main.rand.NextFloatDirection() * 0.25f;
 			float num6 = Main.rand.NextFloat() * 4f + 0.1f;
 			Vector2 vector = Main.rand.NextVector2Circular(12f, 12f) * num3;
 			Color.Lerp(Color.Lerp(Color.Black, indigo, Main.rand.NextFloat() * 0.5f), value, Main.rand.NextFloat() * 0.6f);
@@ -1300,7 +_,7 @@
 
 	private static void Spawn_BlackLightningHit(ParticleOrchestraSettings settings)
 	{
-		float num = Main.rand.NextFloat() * ((float)Math.PI * 2f);
+		float num = Main.rand.NextFloat() * (MathF.PI * 2f);
 		float num2 = 7f;
 		float num3 = 0.7f;
 		int num4 = 916;
@@ -1309,7 +_,7 @@
 		Color indigo = Color.Indigo;
 		indigo.A = 0;
 		for (float num5 = 0f; num5 < 1f; num5 += 1f / num2) {
-			float num6 = (float)Math.PI * 2f * num5 + num + Main.rand.NextFloatDirection() * 0.25f;
+			float num6 = MathF.PI * 2f * num5 + num + Main.rand.NextFloatDirection() * 0.25f;
 			float num7 = Main.rand.NextFloat() * 4f + 0.1f;
 			Vector2 vector = Main.rand.NextVector2Circular(12f, 12f) * num3;
 			Color.Lerp(Color.Lerp(Color.Black, indigo, Main.rand.NextFloat() * 0.5f), value, Main.rand.NextFloat() * 0.6f);
@@ -1338,11 +_,11 @@
 
 	private static void Spawn_StellarTune(ParticleOrchestraSettings settings)
 	{
-		float num = Main.rand.NextFloat() * ((float)Math.PI * 2f);
+		float num = Main.rand.NextFloat() * (MathF.PI * 2f);
 		float num2 = 5f;
 		Vector2 vector = new Vector2(0.7f);
 		for (float num3 = 0f; num3 < 1f; num3 += 1f / num2) {
-			float num4 = (float)Math.PI * 2f * num3 + num + Main.rand.NextFloatDirection() * 0.25f;
+			float num4 = MathF.PI * 2f * num3 + num + Main.rand.NextFloatDirection() * 0.25f;
 			Vector2 vector2 = 1.5f * vector;
 			float num5 = 60f;
 			Vector2 vector3 = Main.rand.NextVector2Circular(12f, 12f) * vector;
@@ -1364,11 +_,11 @@
 
 	private static void Spawn_Keybrand(ParticleOrchestraSettings settings)
 	{
-		float num = Main.rand.NextFloat() * ((float)Math.PI * 2f);
+		float num = Main.rand.NextFloat() * (MathF.PI * 2f);
 		float num2 = 3f;
 		Vector2 vector = new Vector2(0.7f);
 		for (float num3 = 0f; num3 < 1f; num3 += 1f / num2) {
-			float num4 = (float)Math.PI * 2f * num3 + num + Main.rand.NextFloatDirection() * 0.1f;
+			float num4 = MathF.PI * 2f * num3 + num + Main.rand.NextFloatDirection() * 0.1f;
 			Vector2 vector2 = 1.5f * vector;
 			float num5 = 60f;
 			Vector2 vector3 = Main.rand.NextVector2Circular(4f, 4f) * vector;
@@ -1381,10 +_,10 @@
 			prettySparkleParticle.Scale = vector * 0.8f;
 			Main.ParticleSystem_World_OverPlayers.Add(prettySparkleParticle);
 		}
-		num += 1f / num2 / 2f * ((float)Math.PI * 2f);
+		num += 1f / num2 / 2f * (MathF.PI * 2f);
-		num = Main.rand.NextFloat() * ((float)Math.PI * 2f);
+		num = Main.rand.NextFloat() * (MathF.PI * 2f);
 		for (float num6 = 0f; num6 < 1f; num6 += 1f / num2) {
-			float num7 = (float)Math.PI * 2f * num6 + num + Main.rand.NextFloatDirection() * 0.1f;
+			float num7 = MathF.PI * 2f * num6 + num + Main.rand.NextFloatDirection() * 0.1f;
 			Vector2 vector4 = 1f * vector;
 			float num8 = 30f;
 			Color value = Color.Lerp(Color.Gold, Color.OrangeRed, Main.rand.NextFloat());
@@ -1398,16 +_,16 @@
 			fadingParticle.AccelerationPerFrame = num7.ToRotationVector2() * -(vector4 / num8);
 			fadingParticle.ColorTint = value;
 			fadingParticle.LocalPosition = settings.PositionInWorld + num7.ToRotationVector2() * vector4 * vector * num8 * 0.2f + vector5;
-			fadingParticle.Rotation = num7 + (float)Math.PI / 2f;
+			fadingParticle.Rotation = num7 + MathF.PI / 2f;
 			fadingParticle.FadeInNormalizedTime = 0.3f;
 			fadingParticle.FadeOutNormalizedTime = 0.4f;
 			fadingParticle.Scale = new Vector2(0.5f, 1.2f) * 0.8f * vector;
 			Main.ParticleSystem_World_OverPlayers.Add(fadingParticle);
 		}
 		num2 = 1f;
-		num = Main.rand.NextFloat() * ((float)Math.PI * 2f);
+		num = Main.rand.NextFloat() * (MathF.PI * 2f);
 		for (float num9 = 0f; num9 < 1f; num9 += 1f / num2) {
-			float num10 = (float)Math.PI * 2f * num9 + num;
+			float num10 = MathF.PI * 2f * num9 + num;
 			float typeInfo = 30f;
 			Color colorTint = Color.Lerp(Color.CornflowerBlue, Color.White, Main.rand.NextFloat());
 			colorTint.A = 127;
@@ -1418,7 +_,7 @@
 			fadingParticle2.SetTypeInfo(typeInfo);
 			fadingParticle2.ColorTint = colorTint;
 			fadingParticle2.LocalPosition = settings.PositionInWorld + vector6;
-			fadingParticle2.Rotation = num10 + (float)Math.PI / 2f;
+			fadingParticle2.Rotation = num10 + MathF.PI / 2f;
 			fadingParticle2.FadeInNormalizedTime = 0.1f;
 			fadingParticle2.FadeOutNormalizedTime = 0.4f;
 			fadingParticle2.Scale = new Vector2(0.1f, 0.1f) * vector;
