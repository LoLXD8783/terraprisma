--- decompiled/TerrariaClientWindows/Terraria/DataStructures/PlayerDrawSet.cs
+++ decompiled/TerrariaClientMac/Terraria/DataStructures/PlayerDrawSet.cs
@@ -1054,14 +_,14 @@
 						if (drawPlayer.nebulaLevelLife < 1) {
 							continue;
 						}
-						num20 = (float)Math.PI * 2f / (float)drawPlayer.nebulaLevelLife;
+						num20 = MathF.PI * 2f / (float)drawPlayer.nebulaLevelLife;
 						num22 = drawPlayer.nebulaLevelLife;
 						break;
 					case 1:
 						if (drawPlayer.nebulaLevelMana < 1) {
 							continue;
 						}
-						num20 = (float)Math.PI * -2f / (float)drawPlayer.nebulaLevelMana;
+						num20 = MathF.PI * -2f / (float)drawPlayer.nebulaLevelMana;
 						num22 = drawPlayer.nebulaLevelMana;
 						num19 = (float)(-drawPlayer.miscCounter) / 180f;
 						num21 = 20f;
@@ -1071,7 +_,7 @@
 						if (drawPlayer.nebulaLevelDamage < 1) {
 							continue;
 						}
-						num20 = (float)Math.PI * 2f / (float)drawPlayer.nebulaLevelDamage;
+						num20 = MathF.PI * 2f / (float)drawPlayer.nebulaLevelDamage;
 						num22 = drawPlayer.nebulaLevelDamage;
 						num19 = (float)drawPlayer.miscCounter / 180f;
 						num21 = 30f;
@@ -1082,7 +_,7 @@
 					Dust dust20 = Dust.NewDustDirect(Position, drawPlayer.width, drawPlayer.height, type2, 0f, 0f, 100, default(Color), 1.5f);
 					dust20.noGravity = true;
 					dust20.velocity = Vector2.Zero;
-					dust20.position = drawPlayer.Center + Vector2.UnitY * drawPlayer.gfxOffY + (num19 * ((float)Math.PI * 2f) + num20 * (float)j).ToRotationVector2() * num21;
+					dust20.position = drawPlayer.Center + Vector2.UnitY * drawPlayer.gfxOffY + (num19 * (MathF.PI * 2f) + num20 * (float)j).ToRotationVector2() * num21;
 					dust20.customData = drawPlayer;
 					DustCache.Add(dust20.dustIndex);
 				}
