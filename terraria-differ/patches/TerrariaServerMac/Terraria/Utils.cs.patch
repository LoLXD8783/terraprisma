--- decompiled/TerrariaServerWindows/Terraria/Utils.cs
+++ decompiled/TerrariaServerMac/Terraria/Utils.cs
@@ -386,13 +_,13 @@
 		List<List<TextSnippet>> list = new List<List<TextSnippet>>();
 		List<TextSnippet> list2 = new List<TextSnippet>();
 		foreach (TextSnippet textSnippet in array) {
-			string[] array2 = textSnippet.Text.Split('\n');
+			string[] array2 = textSnippet.Text.Split(new char[1] { '\n' });
 			for (int j = 0; j < array2.Length - 1; j++) {
 				list2.Add(textSnippet.CopyMorph(array2[j]));
 				list.Add(list2);
 				list2 = new List<TextSnippet>();
 			}
-			list2.Add(textSnippet.CopyMorph(array2[array2.Length - 1]));
+			list2.Add(textSnippet.CopyMorph(array2[^1]));
 		}
 		list.Add(list2);
 		if (maxWidth != -1) {
@@ -410,7 +_,7 @@
 						if (num3 < 0) {
 							num3 = 0;
 						}
-						string[] array3 = list3[l].Text.Split(' ');
+						string[] array3 = list3[l].Text.Split(new char[1] { ' ' });
 						int num4 = num3;
 						if (array3.Length > 1) {
 							num4 = 0;
@@ -453,11 +_,11 @@
 	{
 		string[] array = new string[maxLines];
 		int num = 0;
-		List<string> list = new List<string>(text.Split('\n'));
-		List<string> list2 = new List<string>(list[0].Split(' '));
+		List<string> list = new List<string>(text.Split(new char[1] { '\n' }));
+		List<string> list2 = new List<string>(list[0].Split(new char[1] { ' ' }));
 		for (int i = 1; i < list.Count && i < maxLines; i++) {
 			list2.Add("\n");
-			list2.AddRange(list[i].Split(' '));
+			list2.AddRange(list[i].Split(new char[1] { ' ' }));
 		}
 		bool flag = true;
 		while (list2.Count > 0) {
