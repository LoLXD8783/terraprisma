--- decompiled/TerrariaClientWindows/Terraria/Projectile.cs
+++ decompiled/TerrariaClientLinux/Terraria/Projectile.cs
@@ -52973,8 +_,8 @@
 				if (type == 274) {
 					if (timeLeft < 85) {
 						byte b3 = (byte)(timeLeft * 3);
-						byte a3 = (byte)(100f * ((float)(int)b3 / 255f));
+						byte b4 = (byte)(100f * ((float)(int)b3 / 255f));
-						return new Color(b3, b3, b3, a3);
+						return new Color(b3, b3, b3, b4);
 					}
 					return new Color(255, 255, 255, 100);
 				}
@@ -53117,7 +_,7 @@
 							r = (int)((float)r * num9);
 							g = (int)((float)g * num9);
 							b = (int)((float)b * num9);
-							int a4 = (int)(100f * num9);
+							int num10 = (int)(100f * num9);
 							r += 50;
 							if (r > 255) {
 								r = 255;
@@ -53130,7 +_,7 @@
 							if (b > 255) {
 								b = 255;
 							}
-							return new Color(r, g, b, a4);
+							return new Color(r, g, b, num10);
 						}
 						if (type == 114 || type == 115) {
 							if (localAI[1] >= 15f) {
@@ -53139,8 +_,8 @@
 							if (localAI[1] < 5f) {
 								return Color.Transparent;
 							}
-							int num10 = (int)((localAI[1] - 5f) / 10f * 255f);
+							int num11 = (int)((localAI[1] - 5f) / 10f * 255f);
-							return new Color(num10, num10, num10, num10);
+							return new Color(num11, num11, num11, num11);
 						}
 						if (type == 83 || type == 88 || type == 89 || type == 90 || type == 100 || type == 104 || type == 279 || (type >= 283 && type <= 287) || type == 876) {
 							if (alpha < 200) {
@@ -53177,18 +_,18 @@
 				}
 			}
 		}
-		float num11 = (float)(255 - alpha) / 255f;
+		float num12 = (float)(255 - alpha) / 255f;
-		r = (int)((float)(int)newColor.R * num11);
+		r = (int)((float)(int)newColor.R * num12);
-		g = (int)((float)(int)newColor.G * num11);
+		g = (int)((float)(int)newColor.G * num12);
-		b = (int)((float)(int)newColor.B * num11);
+		b = (int)((float)(int)newColor.B * num12);
-		int num12 = newColor.A - alpha;
+		int num13 = newColor.A - alpha;
-		if (num12 < 0) {
+		if (num13 < 0) {
-			num12 = 0;
+			num13 = 0;
 		}
-		if (num12 > 255) {
+		if (num13 > 255) {
-			num12 = 255;
+			num13 = 255;
 		}
-		return new Color(r, g, b, num12);
+		return new Color(r, g, b, num13);
 	}
 
 	public override string ToString()
